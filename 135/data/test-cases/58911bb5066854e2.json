{"uid":"58911bb5066854e2","name":"test_community_messages_with_node_pause_10_seconds","fullName":"tests.test_community_messages.TestCommunityMessages#test_community_messages_with_node_pause_10_seconds","historyId":"9d5c5c19a9c20059f4a5d5c182032b2c","time":{"start":1721822444461,"stop":1721822480765,"duration":36304},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>>(['acdd04a3-2590-4840-a612-bf51f28dc8d5'])\n +    where <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>> = <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>.wait_for_logs","statusTrace":"tests/test_community_messages.py:92: in test_community_messages_with_node_pause_10_seconds\n    assert community_node.wait_for_logs([message])\nE   AssertionError: assert False\nE    +  where False = <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>>(['acdd04a3-2590-4840-a612-bf51f28dc8d5'])\nE    +    where <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>> = <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>.wait_for_logs","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"set_allure_env_variables","time":{"start":1721822267861,"stop":1721822267861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"start_1_node","time":{"start":1721822436750,"stop":1721822444460,"duration":7710},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"attach_logs_on_fail","time":{"start":1721822436750,"stop":1721822436750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_open_nodes","time":{"start":1721822436750,"stop":1721822436750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>>(['acdd04a3-2590-4840-a612-bf51f28dc8d5'])\n +    where <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>> = <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>.wait_for_logs","statusTrace":"tests/test_community_messages.py:92: in test_community_messages_with_node_pause_10_seconds\n    assert community_node.wait_for_logs([message])\nE   AssertionError: assert False\nE    +  where False = <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>>(['acdd04a3-2590-4840-a612-bf51f28dc8d5'])\nE    +    where <bound method StatusNode.wait_for_logs of <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>> = <src.node.status_node.StatusNode object at 0x7f6f5d9c91c0>.wait_for_logs","steps":[],"attachments":[{"uid":"d31e22778b7d672c","name":"log","source":"d31e22778b7d672c.txt","type":"text/plain","size":363055}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"attach_logs_on_fail::0","time":{"start":1721822480770,"stop":1721822480771,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_open_nodes::0","time":{"start":1721822480771,"stop":1721822480806,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"set_allure_env_variables::0","time":{"start":1721824715767,"stop":1721824715768,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('start_1_node')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_community_messages"},{"name":"subSuite","value":"TestCommunityMessages"},{"name":"host","value":"fv-az1106-944"},{"name":"thread","value":"10135-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_community_messages"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"5c71acb2462001bb","reportUrl":"https://status-im.github.io/status-cli-tests/134//#testresult/5c71acb2462001bb","status":"broken","statusDetails":"KeyError: 'result'","time":{"start":1721821711761,"stop":1721821718042,"duration":6281}},{"uid":"7ccf241855787d2a","reportUrl":"https://status-im.github.io/status-cli-tests/133//#testresult/7ccf241855787d2a","status":"passed","time":{"start":1721817761907,"stop":1721817788226,"duration":26319}}]},"tags":["@pytest.mark.usefixtures('start_1_node')"]},"source":"58911bb5066854e2.json","parameterValues":[]}